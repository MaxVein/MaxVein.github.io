{"version":3,"sources":["features/admin/defects/DeleteDialog/DeleteDialog.module.css","common/components/Loader/Loader.module.css","environments/environment.tsx","common/utils/api.tsx","common/components/Snackbar/snackbar.tsx","features/login/Login.tsx","features/login/index.js","features/admin/AdminNavItem.tsx","common/utils/interceptor.ts","features/admin/admins/AdminsServise.ts","features/admin/admins/ConfirmDelete.tsx","features/admin/admins/AdminAddDialog.tsx","features/admin/admins/AdminRow.tsx","features/admin/admins/index.js","features/admin/admins/Admins.tsx","common/components/Loader/Loader.tsx","features/admin/defects/DefectsContext.ts","features/admin/defects/DeleteDialog/DeleteDialog.tsx","features/admin/defects/InfoDialog/InfoDialog.tsx","features/admin/defects/UpdateDialog/UpdateDialog.tsx","features/admin/defects/table/Status.tsx","features/admin/defects/table/DefectsTableRow.tsx","features/admin/defects/DefectsService.ts","features/admin/defects/models/DefectsModels.ts","features/admin/defects/table/DefectsTable.tsx","features/admin/defects/index.tsx","features/admin/nav.tsx","features/admin/AdminPanel.tsx","common/guards/LoginRoute.tsx","common/guards/ProtectedRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx","features/admin/defects/table/DefectsTable.module.css","features/admin/admins/Admins.module.css"],"names":["module","exports","environment","login","body","a","axios","post","response","sessionStorage","setItem","data","token","err","logOut","removeItem","isLogged","getItem","SnackbarHandler","snack","setSnack","closeSnack","event","reason","open","Snackbar","autoHideDuration","onClose","Alert","elevation","variant","severity","type","message","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","logo","Login","setAuthInfo","useState","classes","validationSchema","Yup","name","required","password","submitHandler","value","logInfo","email","isAuth","Container","component","maxWidth","CssBaseline","className","Typography","initialValues","onSubmit","validateOnMount","props","noValidate","handleSubmit","TextField","fullWidth","id","label","values","onBlur","handleBlur","onChange","handleChange","helperText","touched","errors","error","Boolean","Button","disabled","isValid","color","itemText","fontSize","active","fontWeight","primary","MainListItems","path","icon","title","ListItem","NavLink","to","exact","activeClassName","ListItemIcon","ListItemText","disableTypography","telegramApiAxios","create","interceptors","request","use","config","console","log","headers","Authorization","status","window","location","reload","getAdmins","get","addAdminData","payload","admin","deleteAdminData","adminsData","delete","updatedList","filter","item","_id","updateAdminData","editAdmin","patch","editId","map","ConfirmDelete","setShowDelDialog","setDeleteAdmin","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","onClick","AdminAddDialog","setOpen","setEdit","setAddAdmin","setEditAdmin","username","confirmPassword","min","max","matches","RegExp","oneOf","x","y","isEqual","prop","compareObj","edit","isChanged","add","style","textAlign","AdminRow","adminData","openDel","setOpenDel","TableRow","TableCell","Admins","loading","setLoading","page","setPage","rowsPerPage","setRowsPerPage","setAdminsData","addAdmin","deleteAdmin","useEffect","admins","Math","floor","length","Array","isArray","ceil","styles","loader","CircularProgress","entityHeader","entityHeaderTitle","disableElevation","entityHeaderButton","boxShadow","Table","stickyHeader","aria-label","TableHead","elem","uuidv4","TableBody","slice","index","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","target","Loader","size","DefectsContext","React","createContext","InfoDialog","setDeleted","useContext","closeModal","Fragment","entityTitle","deleteModal","Card","justifyContent","ContentPhoto","Divider","defect","CardActionArea","CardMedia","height","image","attachment","CardContent","gutterBottom","room","CardActions","paddingTop","padding","UpdateDialog","setUpdated","intialFormValues","priority","open_date","editValidationSchema","shape","setFieldValue","FormControl","InputLabel","Select","labelId","MenuItem","utils","DateFnsUtils","disableToolbar","format","date","Satus","Chip","statusLabel","setStatusLabel","DefectsTableRow","setStatus","update","setUpdate","info","setInfo","del","setDel","openModal","mode","hover","role","tabIndex","align","Status","Tooltip","arrow","button","Description","CheckCircle","DeleteDialog","then","res","editDefect","deleteModeSubmit","setDataSource","deleteDefect","prevVal","tableDefect","catch","columns","minWidth","statuses","priorities","DefectsTable","dataSource","FilteredDataSource","setFilteredDataSource","loaded","setLoaded","deleted","updated","StatusFilter","setStatusFilter","PriorityFilter","setPriorityFilter","getDefects","defects","updatedData","Date","toISOString","substr","updateModeSubmit","statusValue","checkModeSumbit","filteredArr","FilterByStatus","FilterByPriority","Provider","NotificationImportant","FormGroup","row","formGroup","formControl","Paper","TableContainer","entityTableContainer","entityTable","column","labelRowsPerPage","navList","Dashboard","SupervisedUserCircle","Group","InsertChartSharp","root","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","closeMenuButton","marginLeft","AdminPanel","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","logoutHandler","List","AppBar","position","Toolbar","IconButton","edge","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","keepMounted","xsDown","LoginRoute","Component","authInfo","render","pathname","state","from","ProtectedRoute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ff320d8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteModal\":\"DeleteDialog_deleteModal__23IdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2jkmH\"};","export const environment = {\r\n    production: false,\r\n    BASEURL: 'https://digichlist-api.herokuapp.com/api/',\r\n};\r\n","import axios from 'axios';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport const login = async (body) => {\r\n    try {\r\n        const response = await axios.post(`${environment.BASEURL}authorization/login`, body);\r\n        sessionStorage.setItem('secret-auth-token', response.data.token);\r\n        return response.data;\r\n    } catch (err) {\r\n        return { err: err };\r\n    }\r\n};\r\nexport const logOut = () => {\r\n    sessionStorage.removeItem('secret-auth-token');\r\n};\r\nexport const isLogged = () => {\r\n    return !!sessionStorage.getItem('secret-auth-token');\r\n};\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert, { Color } from '@material-ui/lab/Alert';\r\n\r\nexport const messages = [];\r\n\r\n// interface Snackbar {\r\n//     snack: {\r\n//         open: boolean;\r\n//         message: string;\r\n//         type: Color;\r\n//     };\r\n//     setSnack(snack);\r\n// }\r\n\r\nexport default function SnackbarHandler({ snack, setSnack }): JSX.Element {\r\n    const closeSnack = (event, reason?) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnack({ open: false });\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={snack.open} autoHideDuration={3000} onClose={closeSnack}>\r\n            <Alert\r\n                elevation={4}\r\n                variant='filled'\r\n                onClose={(event) => closeSnack(event)}\r\n                severity={snack.type}>\r\n                {snack.message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { isLogged, login } from './../../common/utils/api';\r\nimport SnackbarHandler from './../../common/components/Snackbar/snackbar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    logo: {\r\n        backgroundColor: '#fafafa',\r\n    },\r\n}));\r\n\r\nconst Login = ({ setAuthInfo }): JSX.Element => {\r\n    const [snack, setSnack] = useState({ open: false, message: '', type: 'success' });\r\n    const classes = useStyles();\r\n\r\n    const initialValues = {\r\n        name: '',\r\n        password: '',\r\n    };\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(`Обов'язкове поле`),\r\n        password: Yup.string().required(`Обов'язкове поле`),\r\n    });\r\n    const submitHandler = async (value) => {\r\n        const logInfo = { email: value.name, password: value.password };\r\n        const response = await login(logInfo);\r\n        if (response.err) {\r\n            setSnack({\r\n                open: true,\r\n                message: 'Неправильний логін або пароль',\r\n                type: 'error',\r\n            });\r\n        }\r\n        const isAuth = await isLogged();\r\n        setAuthInfo(isAuth);\r\n    };\r\n\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component='h1' variant='h5'>\r\n                    Log in\r\n                </Typography>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={submitHandler}\r\n                    validateOnMount={true}>\r\n                    {(props) => (\r\n                        <form className={classes.form} noValidate onSubmit={props.handleSubmit}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='name'\r\n                                label='Name'\r\n                                name='name'\r\n                                value={props.values.name}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                helperText={props.touched.name ? props.errors.name : ''}\r\n                                error={props.touched.name && Boolean(props.errors.name)}\r\n                            />\r\n\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                name='password'\r\n                                label='Password'\r\n                                type='password'\r\n                                id='password'\r\n                                onBlur={props.handleBlur}\r\n                                value={props.values.password}\r\n                                onChange={props.handleChange}\r\n                                helperText={props.touched.password ? props.errors.password : ''}\r\n                                error={props.touched.password && Boolean(props.errors.password)}\r\n                            />\r\n\r\n                            <Button\r\n                                disabled={!props.isValid}\r\n                                type='submit'\r\n                                fullWidth\r\n                                variant='contained'\r\n                                color='primary'\r\n                                className={classes.submit}>\r\n                                Log In\r\n                            </Button>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            <SnackbarHandler snack={snack} setSnack={setSnack} />\r\n        </Container>\r\n    );\r\n};\r\nexport default Login;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    itemText: {\r\n        fontSize: '1rem',\r\n    },\r\n    active: {\r\n        color: 'white',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& svg': {\r\n            color: 'white',\r\n        },\r\n    },\r\n}));\r\n\r\nexport const MainListItems = ({ path, icon, title }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <ListItem component={NavLink} to={path} exact activeClassName={classes.active}>\r\n            <ListItemIcon>{icon}</ListItemIcon>\r\n            <ListItemText\r\n                disableTypography\r\n                className={classes.itemText}\r\n                color='primary'\r\n                primary={title}\r\n            />\r\n        </ListItem>\r\n    );\r\n};\r\n","import axios from 'axios';\r\n\r\nimport { logOut } from './api';\r\n\r\nexport const telegramApiAxios = axios.create({});\r\ntelegramApiAxios.interceptors.request.use((config) => {\r\n    const token = sessionStorage.getItem('secret-auth-token');\r\n    console.log(token);\r\n    if (token) {\r\n        console.log('sdf');\r\n        config.headers.Authorization = token;\r\n    }\r\n    return config;\r\n});\r\n\r\ntelegramApiAxios.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        if (error.response.status === 401) {\r\n            logOut();\r\n            window.location.reload();\r\n        }\r\n        return error;\r\n    },\r\n);\r\n","import { telegramApiAxios } from '../../../common/utils/interceptor';\r\nimport { environment } from '../../../environments/environment';\r\nimport axios from 'axios';\r\n\r\nexport const getAdmins = async () => await telegramApiAxios.get(`${environment.BASEURL}admin/all`);\r\n\r\nexport const addAdminData = async (payload) => {\r\n    try {\r\n        const response = await telegramApiAxios.post(\r\n            `${environment.BASEURL}admin/registration`,\r\n            payload,\r\n        );\r\n        return response.data.admin;\r\n    } catch (err) {\r\n        return { err: err };\r\n    }\r\n};\r\n\r\nexport const deleteAdminData = async (id, adminsData) => {\r\n    try {\r\n        const response = await telegramApiAxios.delete(`${environment.BASEURL}admin/delete/${id}`);\r\n        const updatedList = adminsData.filter((item) => id !== item._id);\r\n        return updatedList;\r\n    } catch (err) {\r\n        return { err: err };\r\n    }\r\n};\r\n\r\nexport const updateAdminData = async (adminsData, editAdmin) => {\r\n    try {\r\n        const response = await telegramApiAxios.patch(\r\n            `${environment.BASEURL}admin/update/${editAdmin.editId}`,\r\n            editAdmin.data,\r\n        );\r\n        console.log(response.data.admin);\r\n\r\n        const updatedList = adminsData.map((item) =>\r\n            response.data.admin._id === item._id ? response.data.admin : item,\r\n        );\r\n        console.log(updatedList);\r\n        return updatedList;\r\n    } catch (err) {\r\n        return { err: err };\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst ConfirmDelete = ({ open, setShowDelDialog, id, setDeleteAdmin }) => {\r\n    const handleClose = () => {\r\n        setShowDelDialog(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby='responsive-dialog-title'>\r\n            <DialogTitle id='responsive-dialog-title'>Видалити адміна</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Ви впевнені що хочете видалити адміна?</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button autoFocus onClick={handleClose} color='primary'>\r\n                    Відмінити\r\n                </Button>\r\n                <Button\r\n                    onClick={() => {\r\n                        setShowDelDialog(false);\r\n                        setDeleteAdmin({ id: id, delete: true });\r\n                    }}\r\n                    color='primary'\r\n                    autoFocus>\r\n                    Видалити\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ConfirmDelete;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\n\r\nconst AdminAddDialog = ({ open, setOpen, admin, setEdit, setAddAdmin, setEditAdmin }) => {\r\n    const initialValues = {\r\n        username: admin ? admin.username : '',\r\n        email: admin ? admin.email : '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    };\r\n\r\n    const validationSchema = admin\r\n        ? Yup.object({\r\n              username: Yup.string()\r\n                  .required('Заповни поле')\r\n                  .min(5, \"Коротке ім'я\")\r\n                  .max(50, \"Задовге ім'я\"),\r\n              email: Yup.string().email('Введіть коректну пошту').required('Заповни поле'),\r\n              password: Yup.string()\r\n                  .min(8, 'Мінімум 8 символів')\r\n                  .matches(\r\n                      new RegExp('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'),\r\n                      'Невідповідний пароль',\r\n                  ),\r\n              confirmPassword: Yup.string().oneOf(\r\n                  [Yup.ref('password'), null],\r\n                  'Паролі не співпадають',\r\n              ),\r\n          })\r\n        : Yup.object({\r\n              username: Yup.string()\r\n                  .required('Заповни поле')\r\n                  .min(5, \"Коротке ім'я\")\r\n                  .max(50, \"Задовге ім'я\"),\r\n              email: Yup.string().email('Введіть коректну пошту').required('Заповни поле'),\r\n              password: Yup.string()\r\n                  .required('Заповни поле')\r\n                  .min(8, 'Мінімум 8 символів')\r\n                  .matches(\r\n                      new RegExp('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'),\r\n                      'Невідповідний пароль',\r\n                  ),\r\n              confirmPassword: Yup.string().oneOf(\r\n                  [Yup.ref('password'), null],\r\n                  'Паролі не співпадають',\r\n              ),\r\n          });\r\n    const handleClose = () => {\r\n        admin ? setEdit(false) : setOpen(false);\r\n    };\r\n\r\n    const compareObj = (x, y) => {\r\n        let isEqual = true;\r\n        for (const prop in x) {\r\n            if (x[prop] !== y[prop]) {\r\n                isEqual = false;\r\n                break;\r\n            }\r\n        }\r\n        return isEqual;\r\n    };\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                id='form-dialog'\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>\r\n                    {admin ? 'Редагувати' : 'Добавити'}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Formik\r\n                        initialValues={initialValues}\r\n                        validationSchema={validationSchema}\r\n                        validateOnMount={true}\r\n                        onSubmit={(data) => {\r\n                            console.log(data);\r\n                            console.log(data.password === '');\r\n                            if (admin) {\r\n                                if (\r\n                                    compareObj(\r\n                                        {\r\n                                            username: admin.username,\r\n                                            email: admin.email,\r\n                                            password: admin.password,\r\n                                        },\r\n                                        (data =\r\n                                            data.password === ''\r\n                                                ? { ...data, password: admin.password }\r\n                                                : data),\r\n                                    )\r\n                                ) {\r\n                                    setEditAdmin({\r\n                                        edit: true,\r\n                                        data: data,\r\n                                        isChanged: false,\r\n                                        editId: admin._id,\r\n                                    });\r\n                                } else {\r\n                                    setEditAdmin({\r\n                                        edit: true,\r\n                                        data: data,\r\n                                        isChanged: true,\r\n                                        editId: admin._id,\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                setAddAdmin({\r\n                                    add: true,\r\n                                    data: data,\r\n                                });\r\n                            }\r\n                        }}>\r\n                        {({\r\n                            isValid,\r\n                            errors,\r\n                            touched,\r\n                            values,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                        }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <TextField\r\n                                    name='username'\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    autoFocus\r\n                                    margin='dense'\r\n                                    id='username'\r\n                                    label={'Імя користувача'}\r\n                                    type='text'\r\n                                    fullWidth\r\n                                    error={touched.username && Boolean(errors.username)}\r\n                                />\r\n                                <TextField\r\n                                    name='email'\r\n                                    value={values.email}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    autoFocus\r\n                                    margin='dense'\r\n                                    id='email'\r\n                                    label={'Пошта'}\r\n                                    type='text'\r\n                                    fullWidth\r\n                                    error={touched.email && Boolean(errors.email)}\r\n                                />\r\n                                <TextField\r\n                                    fullWidth\r\n                                    margin='dense'\r\n                                    type='password'\r\n                                    label={'Введіть пароль'}\r\n                                    name='password'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.password}\r\n                                    helperText={touched.password ? errors.password : ''}\r\n                                    error={touched.password && Boolean(errors.password)}\r\n                                />\r\n                                <TextField\r\n                                    fullWidth\r\n                                    margin='dense'\r\n                                    type='password'\r\n                                    label={'Підтвердіть пароль'}\r\n                                    name='confirmPassword'\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.confirmPassword}\r\n                                    helperText={\r\n                                        touched.confirmPassword ? errors.confirmPassword : ''\r\n                                    }\r\n                                    error={\r\n                                        touched.confirmPassword && Boolean(errors.confirmPassword)\r\n                                    }\r\n                                />\r\n\r\n                                <div style={{ margin: '1rem', textAlign: 'center' }}>\r\n                                    <Button onClick={handleClose} color='primary'>\r\n                                        {'Відмінити'}\r\n                                    </Button>\r\n                                    <Button disabled={!isValid} type='submit' color='primary'>\r\n                                        {admin ? 'Оновити' : 'Добавити'}\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminAddDialog;\r\n","import React, { useState } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport ConfirmDelete from './ConfirmDelete';\r\nimport AdminAddDialog from './AdminAddDialog';\r\n\r\nconst AdminRow = ({ adminData, id, setDeleteAdmin, setEditAdmin }) => {\r\n    const { username, email, _id } = adminData;\r\n    const [edit, setEdit] = useState(false);\r\n    const [openDel, setOpenDel] = useState(false);\r\n\r\n    const dialogOpenHandler = () => {\r\n        setEdit(true);\r\n    };\r\n\r\n    const dialogOpenDelHandler = () => {\r\n        setOpenDel(true);\r\n    };\r\n    return (\r\n        <TableRow>\r\n            <TableCell>{id}</TableCell>\r\n            <TableCell>{username}</TableCell>\r\n            <TableCell>{email}</TableCell>\r\n            <TableCell>\r\n                <div>\r\n                    <Button color='primary' onClick={dialogOpenHandler}>\r\n                        <EditIcon />\r\n                    </Button>\r\n                    <Button color='primary' onClick={dialogOpenDelHandler}>\r\n                        <DeleteIcon />\r\n                    </Button>\r\n                </div>\r\n            </TableCell>\r\n            {openDel ? (\r\n                <ConfirmDelete\r\n                    open={openDel}\r\n                    setShowDelDialog={setOpenDel}\r\n                    id={_id}\r\n                    setDeleteAdmin={setDeleteAdmin}\r\n                />\r\n            ) : null}\r\n            {edit ? (\r\n                <AdminAddDialog\r\n                    open={edit}\r\n                    setOpen={setEdit}\r\n                    setAddAdmin={null}\r\n                    admin={adminData}\r\n                    setEdit={setEdit}\r\n                    setEditAdmin={setEditAdmin}\r\n                />\r\n            ) : null}\r\n        </TableRow>\r\n    );\r\n};\r\nexport default AdminRow;\r\n","import { Admins } from './Admins';\r\nexport default Admins;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddCircle from '@material-ui/icons/AddCircle';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport styles from './Admins.module.css';\r\nimport { getAdmins, addAdminData, deleteAdminData, updateAdminData } from './AdminsServise';\r\nimport AdminRow from './AdminRow';\r\nimport AdminAddDialog from './AdminAddDialog';\r\n\r\nimport SnackbarHandler from '../../../common/components/Snackbar/snackbar';\r\n\r\nexport const Admins = () => {\r\n    type Admin = Array<{\r\n        email: string;\r\n        username: string;\r\n        id: string;\r\n        password: string;\r\n    }>;\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [adminsData, setAdminsData] = useState<Admin | []>([]);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [addAdmin, setAddAdmin] = useState({\r\n        add: false,\r\n        data: {},\r\n    });\r\n\r\n    const [editAdmin, setEditAdmin] = useState({\r\n        edit: false,\r\n        data: {},\r\n        editId: 0,\r\n        isChanged: false,\r\n    });\r\n\r\n    const [deleteAdmin, setDeleteAdmin] = useState({\r\n        delete: false,\r\n        id: 0,\r\n    });\r\n    const [snack, setSnack] = useState({ open: false, message: '', type: '' });\r\n    useEffect(() => {\r\n        (async function () {\r\n            const response = await getAdmins();\r\n            if (typeof response === 'object') {\r\n                setAdminsData(response.data.admins);\r\n                setLoading(false);\r\n                setSnack({\r\n                    open: true,\r\n                    message: 'Адміни успішно завантажені',\r\n                    type: 'success',\r\n                });\r\n            } else {\r\n                setSnack({\r\n                    open: true,\r\n                    message: 'Сталася помилка при завантажені',\r\n                    type: 'error',\r\n                });\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            if (addAdmin.add) {\r\n                const response = await addAdminData(addAdmin.data);\r\n                console.log(response);\r\n                if (!response.err) {\r\n                    setAdminsData([...adminsData, response]);\r\n                    setOpen(false);\r\n                    setPage(Math.floor((adminsData.length - 1) / rowsPerPage));\r\n                    setSnack({\r\n                        open: true,\r\n                        message: 'Адміністратора додано',\r\n                        type: 'success',\r\n                    });\r\n                } else {\r\n                    setOpen(false);\r\n                    setSnack({\r\n                        open: true,\r\n                        message: response.err,\r\n                        type: 'error',\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n    }, [addAdmin]);\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            if (deleteAdmin.delete) {\r\n                const response = await deleteAdminData(deleteAdmin.id, adminsData);\r\n                if (Array.isArray(response)) {\r\n                    setAdminsData(response);\r\n                    setPage(Math.ceil((adminsData.length - 1) / rowsPerPage) - 1);\r\n                    setSnack({\r\n                        open: true,\r\n                        message: 'Адміністратора видалено',\r\n                        type: 'success',\r\n                    });\r\n                } else {\r\n                    setOpen(false);\r\n                    setSnack({\r\n                        open: true,\r\n                        message: response.err,\r\n                        type: 'error',\r\n                    });\r\n                }\r\n            }\r\n        })();\r\n    }, [deleteAdmin]);\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            console.log(editAdmin);\r\n            if (!editAdmin.isChanged && editAdmin.edit) {\r\n                setSnack({\r\n                    open: true,\r\n                    message: 'Нічого не змінено',\r\n                    type: 'info',\r\n                });\r\n            } else {\r\n                if (editAdmin.edit) {\r\n                    const response = await updateAdminData(adminsData, editAdmin);\r\n                    console.log(response);\r\n                    if (Array.isArray(response)) {\r\n                        setAdminsData(response);\r\n                        setOpen(false);\r\n                        setSnack({\r\n                            open: true,\r\n                            message: 'Групу редаговано',\r\n                            type: 'success',\r\n                        });\r\n                    } else {\r\n                        setSnack({\r\n                            open: true,\r\n                            message: response.err,\r\n                            type: 'error',\r\n                        });\r\n                        setOpen(false);\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n    }, [editAdmin]);\r\n\r\n    const dialogOpenHandler = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const fieldsName = ['№', \"Ім'я\", 'Пошта', 'Дії'];\r\n    return loading ? (\r\n        <div className={styles.loader}>\r\n            <CircularProgress />\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <div className={styles.entityHeader}>\r\n                <Typography\r\n                    component='h2'\r\n                    variant='h4'\r\n                    color='textPrimary'\r\n                    className={styles.entityHeaderTitle}>\r\n                    {'Адміністратори'}\r\n                </Typography>\r\n                <Button\r\n                    onClick={dialogOpenHandler}\r\n                    disableElevation\r\n                    variant='contained'\r\n                    color='primary'\r\n                    className={styles.entityHeaderButton}>\r\n                    <AddCircle />\r\n                    {'Додати адміна'}\r\n                </Button>\r\n            </div>\r\n            <div style={{ boxShadow: '0.5rem 1rem 2rem gray' }}>\r\n                <Table stickyHeader aria-label='sticky table'>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {fieldsName.map((elem) => (\r\n                                <TableCell key={uuidv4()}>{elem}</TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {adminsData\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((adminData, index) => (\r\n                                <AdminRow\r\n                                    adminData={adminData}\r\n                                    key={uuidv4()}\r\n                                    id={index}\r\n                                    setEditAdmin={setEditAdmin}\r\n                                    setDeleteAdmin={setDeleteAdmin}\r\n                                />\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, 50]}\r\n                    component='div'\r\n                    count={adminsData.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </div>\r\n            <SnackbarHandler snack={snack} setSnack={setSnack} />\r\n            <AdminAddDialog\r\n                open={open}\r\n                setOpen={setOpen}\r\n                setAddAdmin={setAddAdmin}\r\n                admin={null}\r\n                setEdit={null}\r\n                setEditAdmin={null}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Loader = (): JSX.Element => (\r\n    <div className={classes.Loader}>\r\n        <CircularProgress color={'primary'} size={70} />\r\n    </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Defect } from './models/DefectsModels';\r\n\r\ntype DefectStatus = 'open' | 'fixing' | 'solved' | string;\r\n\r\ninterface IDeleted {\r\n    status: boolean;\r\n    id: string;\r\n}\r\ninterface IUpdated {\r\n    status: boolean;\r\n    data: any;\r\n}\r\ninterface IStatus {\r\n    status: boolean;\r\n    body: any;\r\n    value: DefectStatus;\r\n}\r\n\r\ninterface IDefectsContext {\r\n    setDeleted: React.Dispatch<React.SetStateAction<IDeleted>>;\r\n    setUpdated: React.Dispatch<React.SetStateAction<IUpdated>>;\r\n}\r\n\r\nconst DefectsContext = React.createContext<IDefectsContext>({} as IDefectsContext);\r\n\r\nexport default DefectsContext;\r\n","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport styles from './DeleteDialog.module.css';\r\nimport DefectsContext from '../DefectsContext';\r\n\r\nfunction InfoDialog({ open, setOpen, id }): JSX.Element {\r\n    const { setDeleted } = React.useContext(DefectsContext);\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n    function deleteHandler() {\r\n        setDeleted(() => {\r\n            return {\r\n                status: true,\r\n                id: id,\r\n            };\r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={open} onClose={closeModal} aria-labelledby='simple-dialog-title'>\r\n                <DialogTitle className={styles.entityTitle}>Видалити дефект?</DialogTitle>\r\n                <DialogActions className={styles.deleteModal}>\r\n                    <Button onClick={closeModal} color='primary'>\r\n                        Скасувати\r\n                    </Button>\r\n                    <Button\r\n                        onClick={deleteHandler}\r\n                        type='submit'\r\n                        disableElevation\r\n                        variant='contained'\r\n                        color='primary'>\r\n                        Підтвердити\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default InfoDialog;\r\n","import React from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Divider,\r\n} from '@material-ui/core';\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './InfoDialog.module.css';\r\n\r\nconst useStyles = makeStyles({\r\n    Card: {\r\n        maxWidth: 345,\r\n    },\r\n    DialogContent: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n    ContentPhoto: {\r\n        maxWidth: '100%',\r\n    },\r\n    Divider: {\r\n        margin: '0.5rem 0',\r\n    },\r\n});\r\n\r\nfunction InfoDialog({ open, setOpen, defect }): JSX.Element {\r\n    const classes = useStyles();\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={open} onClose={closeModal} aria-labelledby='simple-dialog-title'>\r\n                <Card className={classes.Card}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.ContentPhoto}\r\n                            component='img'\r\n                            height='200'\r\n                            image={\r\n                                defect.attachment !== ''\r\n                                    ? defect.attachment\r\n                                    : 'https://makitweb.com/demo/broken_image/images/noimage.png'\r\n                            }\r\n                            title='Фото дефекту'\r\n                        />\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant='h5' component='h2'>\r\n                                Місце: {defect.room}\r\n                            </Typography>\r\n                            <Divider className={classes.Divider} />\r\n                            <Typography variant='body1' color='textSecondary' component='p'>\r\n                                Проблема: {defect.title}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button onClick={closeModal} variant='contained' color='primary'>\r\n                            Закрити\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default InfoDialog;\r\n","import React, { useContext } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './UpdateDialog.module.css';\r\nimport DefectsContext from '../DefectsContext';\r\n\r\nconst useStyles = makeStyles({\r\n    DialogContent: {\r\n        '&:first-child': {\r\n            paddingTop: '0',\r\n        },\r\n    },\r\n    DialogActions: {\r\n        padding: '1rem',\r\n    },\r\n});\r\n\r\nfunction UpdateDialog({ open, setOpen, defect }): JSX.Element {\r\n    const { setUpdated } = useContext(DefectsContext);\r\n    const classes = useStyles();\r\n\r\n    const intialFormValues = {\r\n        title: defect.title,\r\n        room: defect.room,\r\n        status: defect.status,\r\n        priority: defect.priority,\r\n        open_date: defect.open_date,\r\n    };\r\n    const editValidationSchema = Yup.object().shape({\r\n        title: Yup.string().min(5, 'Надто короткий опис').max(50, 'Надто довгий опис'),\r\n        room: Yup.string().min(3, 'Надто коротка назва').max(50, 'Надто довга назва'),\r\n        status: Yup.string(),\r\n        priority: Yup.number(),\r\n        open_date: Yup.date(),\r\n    });\r\n\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n    const submit = (values) => {\r\n        setUpdated({\r\n            status: true,\r\n            data: {\r\n                id: defect._id,\r\n                values: { ...values },\r\n                intialFormValues: { ...intialFormValues },\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={open} onClose={closeModal} aria-labelledby='simple-dialog-title'>\r\n                <DialogTitle className={styles.entityTitle}>Редагувати дефект</DialogTitle>\r\n                <Formik\r\n                    initialValues={intialFormValues}\r\n                    validationSchema={editValidationSchema}\r\n                    onSubmit={(values) => submit(values)}>\r\n                    {({\r\n                        isValid,\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        setFieldValue,\r\n                    }) => (\r\n                        <form className={styles.form} onSubmit={handleSubmit}>\r\n                            <DialogContent className={classes.DialogContent}>\r\n                                <TextField\r\n                                    autoFocus\r\n                                    margin='dense'\r\n                                    id='title'\r\n                                    label='Опис'\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.title}\r\n                                    helperText={touched.title ? errors.title : ''}\r\n                                    error={touched.title && Boolean(errors.title)}\r\n                                />\r\n                                <TextField\r\n                                    margin='dense'\r\n                                    id='room'\r\n                                    label='Місце дефекту'\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.room}\r\n                                    helperText={touched.room ? errors.room : ''}\r\n                                    error={touched.room && Boolean(errors.room)}\r\n                                />\r\n                                <FormControl fullWidth margin='dense'>\r\n                                    <InputLabel id='status-label'>Cтатус</InputLabel>\r\n                                    <Select\r\n                                        labelId='status-label'\r\n                                        id='status'\r\n                                        name='status'\r\n                                        value={values.status}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}>\r\n                                        <MenuItem value={'open'}>Відкритий</MenuItem>\r\n                                        <MenuItem value={'fixing'}>В процесі</MenuItem>\r\n                                        <MenuItem value={'solved'}>Закритий</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                {errors.status && touched.status ? (\r\n                                    <div>{errors.status}</div>\r\n                                ) : null}\r\n                                <FormControl fullWidth margin='dense'>\r\n                                    <InputLabel id='status-label'>Пріоритет</InputLabel>\r\n                                    <Select\r\n                                        labelId='status-label'\r\n                                        id='priority'\r\n                                        name='priority'\r\n                                        value={values.priority}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}>\r\n                                        <MenuItem value={1}>Терміновий</MenuItem>\r\n                                        <MenuItem value={2}>Якнайшвидше</MenuItem>\r\n                                        <MenuItem value={3}>Звичайний</MenuItem>\r\n                                        <MenuItem value={4}>Відустній</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                {errors.status && touched.status ? (\r\n                                    <div>{errors.status}</div>\r\n                                ) : null}\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant='inline'\r\n                                        format='yyyy-MM-dd'\r\n                                        margin='normal'\r\n                                        id='date-picker-inline'\r\n                                        label='Дата появи'\r\n                                        name='open_date'\r\n                                        value={values.open_date}\r\n                                        onChange={(date) => setFieldValue('open_date', date)}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                {errors.open_date && touched.open_date ? (\r\n                                    <div>{errors.open_date}</div>\r\n                                ) : null}\r\n                            </DialogContent>\r\n                            <DialogActions className={classes.DialogActions}>\r\n                                <Button onClick={closeModal}>Скасувати</Button>\r\n                                <Button\r\n                                    type='submit'\r\n                                    disabled={!isValid}\r\n                                    disableElevation\r\n                                    variant='contained'\r\n                                    color='primary'>\r\n                                    Зберегти\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UpdateDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chip } from '@material-ui/core';\r\n\r\nfunction Satus({ status }): JSX.Element {\r\n    const [statusLabel, setStatusLabel] = useState(<Chip label='Відкритий' color='secondary' />);\r\n    useEffect(() => {\r\n        switch (status) {\r\n            case 'all':\r\n                setStatusLabel(\r\n                    <Chip label='Всі' style={{ backgroundColor: '#4caf50', color: 'white' }} />,\r\n                );\r\n                break;\r\n            case 'open':\r\n                setStatusLabel(\r\n                    <Chip\r\n                        label='Відкритий'\r\n                        style={{ backgroundColor: '#4caf50', color: 'white' }}\r\n                    />,\r\n                );\r\n                break;\r\n            case 'fixing':\r\n                setStatusLabel(\r\n                    <Chip\r\n                        label='В процесі'\r\n                        style={{ backgroundColor: '#ff9800', color: 'white' }}\r\n                    />,\r\n                );\r\n                break;\r\n            case 'solved':\r\n                setStatusLabel(<Chip label='Закритий' style={{ backgroundColor: '##2196f3' }} />);\r\n                break;\r\n        }\r\n    }, []);\r\n    return statusLabel;\r\n}\r\n\r\nexport default Satus;\r\n","import React from 'react';\r\nimport { TableCell, TableRow, Button, Tooltip } from '@material-ui/core';\r\nimport { Edit, Delete, Description, CheckCircle } from '@material-ui/icons';\r\n\r\nimport styles from './DefectsTable.module.css';\r\nimport { Defect } from '../models/DefectsModels';\r\nimport DeleteDialog from '../DeleteDialog/DeleteDialog';\r\nimport InfoDialog from '../InfoDialog/InfoDialog';\r\nimport UpdateDialog from '../UpdateDialog/UpdateDialog';\r\nimport Status from './Status';\r\n\r\nfunction DefectsTableRow({ defect, index, setStatus }): JSX.Element {\r\n    const [update, setUpdate] = React.useState(false);\r\n    const [info, setInfo] = React.useState(false);\r\n    const [del, setDel] = React.useState(false);\r\n\r\n    const checkHandler = () => {\r\n        setStatus({ status: true, data: { ...defect }, value: 'solved' });\r\n    };\r\n\r\n    const openModal = (mode) => {\r\n        switch (mode) {\r\n            case 'update':\r\n                setUpdate(true);\r\n                break;\r\n            case 'info':\r\n                setInfo(true);\r\n                break;\r\n            case 'delete':\r\n                setDel(true);\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TableRow hover role='checkbox' tabIndex={-1}>\r\n            <TableCell>{index}</TableCell>\r\n            <TableCell>{defect.title}</TableCell>\r\n            <TableCell>{defect.room}</TableCell>\r\n            <TableCell align='center'>\r\n                <Status status={defect.status} />\r\n            </TableCell>\r\n            <TableCell align='center'>\r\n                <Tooltip title='Детальніша інформація' arrow>\r\n                    <Button\r\n                        onClick={() => openModal('info')}\r\n                        disableElevation\r\n                        variant='contained'\r\n                        className={styles.button}\r\n                        color='primary'>\r\n                        <Description />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip title='Позначити виконаним' arrow>\r\n                    <Button\r\n                        onClick={checkHandler}\r\n                        disableElevation\r\n                        variant='contained'\r\n                        className={styles.button}\r\n                        color='primary'>\r\n                        <CheckCircle />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip title='Оновити' arrow>\r\n                    <Button\r\n                        disableElevation\r\n                        variant='contained'\r\n                        className={styles.button}\r\n                        color='primary'\r\n                        onClick={() => openModal('update')}>\r\n                        <Edit />\r\n                    </Button>\r\n                </Tooltip>\r\n                <Tooltip title='Видалити' arrow>\r\n                    <Button\r\n                        onClick={() => openModal('delete')}\r\n                        disableElevation\r\n                        variant='contained'\r\n                        className={styles.button}\r\n                        color='primary'>\r\n                        <Delete />\r\n                    </Button>\r\n                </Tooltip>\r\n            </TableCell>\r\n            <UpdateDialog open={update} setOpen={setUpdate} defect={defect} />\r\n            <InfoDialog open={info} setOpen={setInfo} defect={defect} />\r\n            <DeleteDialog open={del} setOpen={setDel} id={defect._id} />\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default DefectsTableRow;\r\n","import { telegramApiAxios } from '../../../common/utils/interceptor';\r\nimport { environment } from '../../../environments/environment';\r\nimport { GetDefects, Defect } from './models/DefectsModels';\r\n\r\nexport async function getDefects(): Promise<GetDefects> {\r\n    return await telegramApiAxios.get(`${environment.BASEURL}defect/all`).then((res) => {\r\n        return res.data;\r\n    });\r\n}\r\nexport async function editDefect(id: string | undefined, body: Defect): Promise<GetDefects> {\r\n    return await telegramApiAxios\r\n        .patch(`${environment.BASEURL}defect/update/${id}`, body)\r\n        .then((res) => res.data);\r\n}\r\nexport async function deleteDefect(id: string): Promise<GetDefects> {\r\n    return await telegramApiAxios\r\n        .delete(`${environment.BASEURL}defect/delete/${id}`)\r\n        .then((res) => res.data);\r\n}\r\n\r\nexport function updateModeSubmit(\r\n    data: any,\r\n    setSnack: any,\r\n    setDataSource: any,\r\n    closeModal: any,\r\n): void {\r\n    if (\r\n        data.values.title === data.intialFormValues.title &&\r\n        data.values.room === data.intialFormValues.room &&\r\n        data.values.status === data.intialFormValues.status &&\r\n        data.values.open_date === data.intialFormValues.open_date &&\r\n        data.values.priority === data.intialFormValues.priority\r\n    ) {\r\n        setSnack({\r\n            open: true,\r\n            message: 'Потрібно щось змінити',\r\n            type: 'info',\r\n        });\r\n    } else {\r\n        const updatedData: Defect = {\r\n            ...data.values,\r\n            open_date: new Date(data.values.open_date).toISOString().substr(0, 10),\r\n        };\r\n        editDefect(data.id, updatedData)\r\n            .then((res) => {\r\n                if (res.response === 'ok') {\r\n                    setDataSource((prevVal) =>\r\n                        prevVal.map((item) =>\r\n                            item._id === data.id ? (item = { _id: data.id, ...data.values }) : item,\r\n                        ),\r\n                    );\r\n                    closeModal();\r\n                    setSnack({\r\n                        open: true,\r\n                        message: 'Дефект успішно оновлено',\r\n                        type: 'success',\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) =>\r\n                setSnack({\r\n                    open: true,\r\n                    message: `На сервері сталась помилка - ${err}`,\r\n                    type: 'error',\r\n                }),\r\n            );\r\n    }\r\n}\r\nexport function deleteModeSubmit(\r\n    id: any,\r\n    setSnack: any,\r\n    setDataSource: any,\r\n    closeModal: any,\r\n): void {\r\n    deleteDefect(id)\r\n        .then((res) => {\r\n            if (res.response === 'ok') {\r\n                setDataSource((prevVal) => prevVal.filter((tableDefect) => tableDefect._id !== id));\r\n                closeModal();\r\n                setSnack({\r\n                    open: true,\r\n                    message: 'Дефект успішно видалено',\r\n                    type: 'success',\r\n                });\r\n            }\r\n        })\r\n        .catch((err) =>\r\n            setSnack({\r\n                open: true,\r\n                message: `На сервері сталась помилка - ${err}`,\r\n                type: 'error',\r\n            }),\r\n        );\r\n}\r\nexport function checkModeSumbit(data, statusValue, setSnack, setDataSource): void {\r\n    const id = data._id;\r\n    const updatedData: Defect = {\r\n        ...data,\r\n        _id: id,\r\n        status: statusValue,\r\n        open_date: new Date(data.open_date).toISOString().substr(0, 10),\r\n    };\r\n    editDefect(id, updatedData)\r\n        .then((res) => {\r\n            if (res.response === 'ok') {\r\n                setDataSource((prevVal) =>\r\n                    prevVal.map((item) =>\r\n                        item._id === data.id ? (item = { _id: data.id, ...data.values }) : item,\r\n                    ),\r\n                );\r\n                setSnack({\r\n                    open: true,\r\n                    message: 'Дефект успішно оновлено',\r\n                    type: 'success',\r\n                });\r\n            }\r\n        })\r\n        .catch((err) =>\r\n            setSnack({\r\n                open: true,\r\n                message: `На сервері сталась помилка - ${err}`,\r\n                type: 'error',\r\n            }),\r\n        );\r\n}\r\nexport function FilterByPriority(filter, filteredArr, setDataSource): void {\r\n    switch (filter) {\r\n        case 0:\r\n            setDataSource(filteredArr);\r\n            break;\r\n        case 1:\r\n            setDataSource(filteredArr.filter((item: any) => item.priority === filter));\r\n            break;\r\n        case 2:\r\n            setDataSource(filteredArr.filter((item: any) => item.priority === filter));\r\n            break;\r\n        case 3:\r\n            setDataSource(filteredArr.filter((item: any) => item.priority === filter));\r\n            break;\r\n        case 4:\r\n            setDataSource(filteredArr.filter((item: any) => item.priority === filter));\r\n            break;\r\n        default:\r\n            setDataSource(filteredArr);\r\n    }\r\n}\r\nexport function FilterByStatus(filter, filteredArr, setDataSource): void {\r\n    switch (filter) {\r\n        case 'all':\r\n            setDataSource(filteredArr);\r\n            break;\r\n        case 'open':\r\n            setDataSource(filteredArr.filter((item: any) => item.status === filter));\r\n            break;\r\n        case 'fixing':\r\n            setDataSource(filteredArr.filter((item: any) => item.status === filter));\r\n            break;\r\n        case 'solved':\r\n            setDataSource(filteredArr.filter((item: any) => item.status === filter));\r\n            break;\r\n        default:\r\n            setDataSource(filteredArr);\r\n    }\r\n}\r\n","import { TableCellProps } from '@material-ui/core';\r\n\r\nexport interface User {\r\n    first_name: string;\r\n    last_name: string;\r\n    username: string;\r\n    enabled: boolean;\r\n}\r\n\r\nexport interface Defect {\r\n    _id?: string;\r\n    title: string;\r\n    room: string;\r\n    attachment: string;\r\n    user?: User;\r\n    status: string;\r\n    open_date: Date;\r\n}\r\n\r\nexport interface GetDefects {\r\n    response: string;\r\n    message: string;\r\n    defects: Array<Defect>;\r\n}\r\ninterface Columns {\r\n    id: string;\r\n    label: string;\r\n    minWidth?: string;\r\n    align?: TableCellProps['align'];\r\n}\r\ninterface StatusFilter {\r\n    title: string;\r\n    value: string;\r\n}\r\ninterface PriorityFilter {\r\n    title: string;\r\n    value: number;\r\n}\r\nexport const columns: Array<Columns> = [\r\n    { id: 'id', label: '№', minWidth: '10%' },\r\n    { id: 'title', label: 'Опис', minWidth: '40%' },\r\n    {\r\n        id: 'room',\r\n        label: 'Приміщенння',\r\n        minWidth: '15%',\r\n    },\r\n    {\r\n        id: 'status',\r\n        label: 'Статус',\r\n        minWidth: '20%',\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'operations',\r\n        label: 'Операції',\r\n        minWidth: '15%',\r\n        align: 'center',\r\n    },\r\n];\r\n\r\nexport const statuses: Array<StatusFilter> = [\r\n    { title: 'Фільтр відсутній', value: 'all' },\r\n    { title: 'Відкриті дефекти', value: 'open' },\r\n    { title: 'Дефекти в процесі', value: 'fixing' },\r\n    { title: 'Закриті дефекти', value: 'solved' },\r\n];\r\nexport const priorities: Array<PriorityFilter> = [\r\n    { title: 'Фільтр відсутній', value: 0 },\r\n    { title: 'Терміново', value: 1 },\r\n    { title: 'Якнайшвидше', value: 2 },\r\n    { title: 'Звичайне завдання', value: 3 },\r\n    { title: 'Пріоритет відсутній', value: 4 },\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TablePagination,\r\n    Paper,\r\n    Typography,\r\n    MenuItem,\r\n    Select,\r\n    InputLabel,\r\n    FormControl,\r\n    FormGroup,\r\n} from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { NotificationImportant } from '@material-ui/icons';\r\n\r\nimport SnackbarHandler from '../../../../common/components/Snackbar/snackbar';\r\nimport Loader from '../../../../common/components/Loader/Loader';\r\nimport DefectsTableRow from './DefectsTableRow';\r\n\r\nimport {\r\n    getDefects,\r\n    deleteModeSubmit,\r\n    updateModeSubmit,\r\n    checkModeSumbit,\r\n    FilterByStatus,\r\n    FilterByPriority,\r\n} from '../DefectsService';\r\nimport styles from './DefectsTable.module.css';\r\nimport { columns, statuses, priorities } from '../models/DefectsModels';\r\nimport DefectsContext from '../DefectsContext';\r\n\r\nfunction DefectsTable(): JSX.Element {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [snack, setSnack] = useState({ open: false, message: '', type: '' });\r\n    const [dataSource, setDataSource] = useState(Array);\r\n    const [FilteredDataSource, setFilteredDataSource] = useState(Array);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const [deleted, setDeleted] = React.useState({ status: false, id: '' });\r\n    const [updated, setUpdated] = React.useState({ status: false, data: {} });\r\n    const [status, setStatus] = React.useState({ status: false, data: {}, value: 'none' });\r\n    const [StatusFilter, setStatusFilter] = React.useState(statuses[0].value);\r\n    const [PriorityFilter, setPriorityFilter] = React.useState(priorities[0].value);\r\n\r\n    const closeModal = (): void => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getDefects().then((res) => {\r\n            setLoaded(true);\r\n            setDataSource(res.defects);\r\n            setFilteredDataSource(res.defects);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (deleted.status) {\r\n            deleteModeSubmit(deleted.id, setSnack, setDataSource, closeModal);\r\n        }\r\n    }, [deleted]);\r\n\r\n    useEffect(() => {\r\n        if (updated.status) {\r\n            updateModeSubmit(updated.data, setSnack, setDataSource, closeModal);\r\n        }\r\n    }, [updated]);\r\n\r\n    useEffect(() => {\r\n        if (status.status) {\r\n            checkModeSumbit(status.data, status.value, setSnack, setDataSource);\r\n        }\r\n    }, [status]);\r\n\r\n    //Filters\r\n    useEffect(() => {\r\n        FilterByStatus(StatusFilter, FilteredDataSource, setDataSource);\r\n    }, [StatusFilter]);\r\n    useEffect(() => {\r\n        FilterByPriority(PriorityFilter, FilteredDataSource, setDataSource);\r\n    }, [PriorityFilter]);\r\n    //\r\n\r\n    const handleChangePage = (event, newPage): void => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event): void => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const handleChangeStatusFilter = (event) => {\r\n        setStatusFilter(event.target.value);\r\n    };\r\n    const handleChangePriorityFilter = (event) => {\r\n        setPriorityFilter(event.target.value);\r\n    };\r\n    return (\r\n        <DefectsContext.Provider value={{ setDeleted, setUpdated }}>\r\n            {loaded ? (\r\n                <React.Fragment>\r\n                    <div className={styles.entityHeader}>\r\n                        <Typography\r\n                            component='h2'\r\n                            variant='h4'\r\n                            color='textPrimary'\r\n                            className={styles.entityHeaderTitle}>\r\n                            <NotificationImportant fontSize='large' />\r\n                            Список дефектів\r\n                        </Typography>\r\n                        <FormGroup row className={styles.formGroup}>\r\n                            <Typography>Виберіть один із фільтрів</Typography>\r\n                            <span style={{ width: '1px', margin: '0 1rem' }} />\r\n                            <FormControl className={styles.formControl}>\r\n                                <InputLabel id='status-filter'>Фільтри по статусу</InputLabel>\r\n                                <Select\r\n                                    labelId='status-filter'\r\n                                    id='status-filter-select'\r\n                                    value={StatusFilter}\r\n                                    onChange={handleChangeStatusFilter}>\r\n                                    {statuses.map((filter) => (\r\n                                        <MenuItem key={filter.value} value={filter.value}>\r\n                                            {filter.title}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl className={styles.formControl}>\r\n                                <InputLabel id='status-filter'>Фільтри по пріоритету</InputLabel>\r\n                                <Select\r\n                                    labelId='status-filter'\r\n                                    id='status-filter-select'\r\n                                    value={PriorityFilter}\r\n                                    onChange={handleChangePriorityFilter}>\r\n                                    {priorities.map((filter) => (\r\n                                        <MenuItem key={filter.value} value={filter.value}>\r\n                                            {filter.title}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <Paper elevation={6}>\r\n                        <TableContainer className={styles.entityTableContainer}>\r\n                            <Table stickyHeader className={styles.entityTable}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {columns.map((column) => (\r\n                                            <TableCell\r\n                                                key={uuidv4()}\r\n                                                align={column.align}\r\n                                                style={{ minWidth: column.minWidth }}>\r\n                                                {column.label}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {dataSource\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((defect, index) => {\r\n                                            return (\r\n                                                <DefectsTableRow\r\n                                                    key={uuidv4()}\r\n                                                    index={index + 1}\r\n                                                    defect={defect}\r\n                                                    setStatus={setStatus}\r\n                                                />\r\n                                            );\r\n                                        })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[10, 25, 100]}\r\n                            labelRowsPerPage='К-сть рядків'\r\n                            component='div'\r\n                            count={dataSource.length}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                        />\r\n                    </Paper>\r\n                    <SnackbarHandler snack={snack} setSnack={setSnack} />\r\n                </React.Fragment>\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </DefectsContext.Provider>\r\n    );\r\n}\r\n\r\nexport default DefectsTable;\r\n","import DefectsTable from './table/DefectsTable';\r\nexport default DefectsTable;\r\n","import React from 'react';\r\nimport {\r\n    AccountBalance,\r\n    CollectionsBookmark,\r\n    Dashboard,\r\n    Dns,\r\n    Group,\r\n    InsertChartSharp,\r\n    SupervisedUserCircle,\r\n    List,\r\n} from '@material-ui/icons';\r\n\r\nexport const navList: any = [\r\n    {\r\n        path: '/admin/dashboard',\r\n        icon: <Dashboard />,\r\n        title: 'Головна',\r\n    },\r\n    {\r\n        path: '/admin/admins',\r\n        icon: <SupervisedUserCircle />,\r\n        title: 'Адміни',\r\n    },\r\n    {\r\n        path: '/admin/users',\r\n        icon: <Group />,\r\n        title: 'Користувачі',\r\n    },\r\n    {\r\n        path: '/admin/defects',\r\n        icon: <InsertChartSharp />,\r\n        title: 'Дефекти',\r\n    },\r\n];\r\n","import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// import VisibleItemList from '../containers/VisibleItemList';\r\nimport { MainListItems } from './AdminNavItem';\r\nimport Admins from './admins';\r\nimport DefectsTable from './defects/index';\r\nimport { navList } from './nav';\r\nimport { logOut } from '../../common/utils/api';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    closeMenuButton: {\r\n        marginRight: 'auto',\r\n        marginLeft: 0,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    itemText: {\r\n        fontSize: '1rem',\r\n    },\r\n    active: {\r\n        color: 'white',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& svg': {\r\n            color: 'white',\r\n        },\r\n    },\r\n}));\r\nconst AdminPanel = ({ setAuthInfo }): JSX.Element => {\r\n    const dummyCategories = ['Адміни', 'Дефекти', 'Користувачі', 'Репорт'];\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n    const logoutHandler = async () => {\r\n        logOut();\r\n        setAuthInfo(false);\r\n    };\r\n    const drawer = (\r\n        <div>\r\n            <List>\r\n                {navList.map(({ path, icon, title }, index) => (\r\n                    <MainListItems key={index + title} path={path} icon={icon} title={title} />\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position='fixed' className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color='inherit'\r\n                        aria-label='Open drawer'\r\n                        edge='start'\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        Digichlist\r\n                    </Typography>\r\n                    <Button color='inherit' onClick={logoutHandler}>\r\n                        Logout\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <nav className={classes.drawer}>\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation='css'>\r\n                    <Drawer\r\n                        variant='temporary'\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}>\r\n                        <IconButton\r\n                            onClick={handleDrawerToggle}\r\n                            className={classes.closeMenuButton}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation='css'>\r\n                    <Drawer\r\n                        className={classes.drawer}\r\n                        variant='permanent'\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}>\r\n                        <div className={classes.toolbar} />\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <div className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                <Switch>\r\n                    <Route path='/admin/admins' component={Admins} />\r\n                    <Route path='/admin/defects' component={DefectsTable} />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from 'react';\r\nimport { Redirect, Route } from '../../../node_modules/react-router-dom';\r\nconst LoginRoute = ({ component: Component, path, authInfo, setAuthInfo }): JSX.Element => {\r\n    return (\r\n        <Route\r\n            render={(props) => {\r\n                if (!authInfo) {\r\n                    return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/admin/dashboard',\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default LoginRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from '../../../node_modules/react-router-dom';\r\nconst ProtectedRoute = ({ component: Component, path, authInfo, setAuthInfo }) => {\r\n    return (\r\n        <Route\r\n            render={(props) => {\r\n                if (authInfo) {\r\n                    return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: { from: props.location },\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Login from './features/login';\r\nimport AdminPanel from './features/admin/AdminPanel';\r\nimport LoginRoute from './common/guards/LoginRoute';\r\nimport { isLogged } from './common/utils/api';\r\n\r\nimport ProtectedRoute from './common/guards/ProtectedRoute';\r\nimport { Redirect, Route, Switch } from '../node_modules/react-router-dom';\r\nimport './App.css';\r\n\r\nfunction App(): JSX.Element {\r\n    const [authInfo, setAuthInfo] = useState(false);\r\n    useEffect(() => {\r\n        async function isAuth() {\r\n            const res = await isLogged();\r\n            setAuthInfo(res);\r\n        }\r\n        isAuth();\r\n    }, []);\r\n    return (\r\n        <Switch>\r\n            <Redirect path='/' to='/login' component={Login} exact />\r\n            <Redirect path='/admin' exact to='/admin/dashboard' />\r\n            <ProtectedRoute\r\n                authInfo={authInfo}\r\n                setAuthInfo={setAuthInfo}\r\n                path='/admin'\r\n                component={AdminPanel}\r\n            />\r\n            <LoginRoute\r\n                setAuthInfo={setAuthInfo}\r\n                authInfo={authInfo}\r\n                path='/login'\r\n                component={Login}\r\n            />\r\n            <Route path='*' component={() => <h1>404</h1>} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from '../node_modules/react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entityHeader\":\"DefectsTable_entityHeader__2JyvH\",\"entityTableContainer\":\"DefectsTable_entityTableContainer__3mzxS\",\"button\":\"DefectsTable_button__3YFDK\",\"entityHeaderTitle\":\"DefectsTable_entityHeaderTitle__3GVLf\",\"entityHeaderButton\":\"DefectsTable_entityHeaderButton__1XXD5\",\"form\":\"DefectsTable_form__1jRBf\",\"deleteModal\":\"DefectsTable_deleteModal__2tgjk\",\"MuiDialogTitle-root\":\"DefectsTable_MuiDialogTitle-root__1H4Ol\",\"formControl\":\"DefectsTable_formControl__24X6l\",\"formGroup\":\"DefectsTable_formGroup__3IbZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"Admins_groups__1u_Gl\",\"entityHeader\":\"Admins_entityHeader__13hQz\",\"MuiSelect-root\":\"Admins_MuiSelect-root__2EX9s\",\"entityHeaderTitle\":\"Admins_entityHeaderTitle__3Ydyn\",\"entityHeaderButton\":\"Admins_entityHeaderButton__2H8Lm\",\"loader\":\"Admins_loader__1Prsd\",\"MuiInput-formControl\":\"Admins_MuiInput-formControl__12Iyo\",\"button\":\"Admins_button__3Fsi5\"};"],"sourceRoot":""}